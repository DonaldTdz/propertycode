@using YK.FrameworkTools.PluginService;
<div id="divPaymentTasksAddListViewController" ng-controller="PaymentTasksAddListController">

    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4>新增交款</h4>
    </div>
    <div class="modal-body">
        <div>
            <div id="ViewSearchContainer">
                <div class="box-body" ng-show="IsShowSearch">
                    <div class="row">
                        <input type="hidden" id="ComDeptId" name="ComDeptId" ng-model="ComDeptId" />
                        <div class="col-md-3">
                            <label>交易截止日期</label>
                            <div class="input-append date input-group">
                                <input type="text" name="EndDate" class="form-control">
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <label class="pull-right">
                        <input type="button" id="btnOrgListSearchView" class="btn btn-primary" value="查询">
                        <input type="button" id="btnOrgListSearchView" class="btn btn-primary" ng-click="SaveData()" value="交款">
                        <input type="checkbox" ng-model="IsShowSearch">显示
                    </label>
                </div>
            </div>
            <div id="divChargeRecordListTable" />
        </div>

    </div>

    @*<div class="modal-footer">
        <button type="button" data-dismiss="modal" class="btn">取消</button>

        </div>*@
    @*设置MVC的一些页面变量事件绑定*@
    <script type="text/javascript">
        var ckFramework = ckFramework || {};

        ckFramework.ChargeRecordListData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));

        ckFramework.ChargeRecordTable = null;

        ckFramework.createChargeRecordListData = {
            TableId:'table_ckFramework_ChargeRecordList',
            IsAddOperate:true,
            Language:ckFramework.HomeData.Language,
            TemplateItemDatas:ckFramework.ChargeRecordListData.TemplateModels,
            DivTable:$('#divChargeRecordListTable'),
            OperateColumn:{ "data":null, "orderable": false,"width":40,
                "render": function(data)
                {
                    var checkBoxContent = '<input type="checkbox" RecordId="'+data.Id+'" data="'+data+'" >'
                    return checkBoxContent;
                }
            }
        };

        ckFramework.TableService.CreateBusinessTable(ckFramework.createChargeRecordListData);
        $('.date').datetimepicker({
            format:  'yyyy-mm-dd'
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            //alert(100)
            //alert(ckFramework.createChargeRecordListData.TableId)
            ckFramework.ChargeRecordTable = $('#' + ckFramework.createChargeRecordListData.TableId).dataSearchTableWithFilter({
                scrollX: true,
                "dom": '<"toolbar">C<"clear">lfrtip',
                language: ckFramework.TableLanguage,
                columns: ckFramework.TableService.CreateTableColumns(ckFramework.createChargeRecordListData),
                filterOptions: {
                    searchButton: "btnOrgListSearchView",
                    clearSearchButton: "ClearSearch",
                    searchContainer: "ViewSearchContainer",
                    Url: '@Url.PluginAction("PropertyMgr", "PaymentTasks", "GetBillChargeRecordViewList")',
                    DrawTable:function(){
                        ckFramework.ChargeRecordTable.draw();
                    }
                }
            });
        });

        ckFramework.fnGetSelectdChargeRecordIds = function(){
            var ids = "";
            $("#table_ckFramework_ChargeRecordList").find("input[type='checkbox']:checked").each(function(){
                ids = ids + $(this).attr("RecordId") + ",";
            });

            return ids;
        }

        ckFramework.fnGetChargeRecordInfo = function(data){
            //alert(55)
            var row = $("#table_ckFramework_ChargeRecordList").find("input:checkbox[data='"+data+"']").parents('tr');
            //alert(66)
            var info = ckFramework.ChargeRecordTable.rows(row).data()[0];
            //alert(77)
            //alert(JSON.stringify(info))
            return info;
        }
    </script>

</div>

