<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YK.FrameworkTools.SensitiveFilterService</name>
    </assembly>
    <members>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.ICacheService.IsContainsKey(System.String)">
            <summary>
            判断缓存是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns>缓存是否存在</returns>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.ICacheService.Get``1(System.String)">
            <summary>
            获取缓存对象
            </summary>
            <typeparam name="T">获取的缓存对象类型</typeparam>
            <param name="key">缓存Key</param>
            <returns>缓存对象</returns>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.ICacheService.Set(System.String,System.Object)">
            <summary>
            设置缓存，滑动过期时间24h
            </summary>
            <param name="key">缓存Key</param>
            <param name="data">缓存数据</param>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.ICacheService.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置缓存，滑动过期时间24h
            </summary>
            <param name="key">缓存Key</param>
            <param name="data">缓存数据</param>
            <param name="timeSpan">缓存滑动过期时间</param>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.ICacheService.Set(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            设置缓存，滑动过期时间24h
            </summary>
            <param name="key">缓存Key</param>
            <param name="data">缓存数据</param>
            <param name="dependency">缓存依赖项</param>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.ICacheService.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan)">
            <summary>
            设置缓存，滑动过期时间24h
            </summary>
            <param name="key">缓存Key</param>
            <param name="data">缓存数据</param>
            <param name="dependency">缓存依赖项</param>
            <param name="timeSpan">缓存滑动过期时间</param>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.ICacheService.Remove(System.String)">
            <summary>
            移除缓存
            </summary>
            <param name="key">缓存Key</param>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.CacheService.IsContainsKey(System.String)">
            <summary>
            判断缓存是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns>缓存是否存在</returns>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.CacheService.Get``1(System.String)">
            <summary>
            获取缓存对象
            </summary>
            <typeparam name="T">获取的缓存对象类型</typeparam>
            <param name="key">缓存Key</param>
            <returns>缓存对象</returns>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.CacheService.Set(System.String,System.Object)">
            <summary>
            设置缓存，滑动过期时间24h
            </summary>
            <param name="key">缓存Key</param>
            <param name="data">缓存数据</param>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.CacheService.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置缓存，滑动过期时间24h
            </summary>
            <param name="key">缓存Key</param>
            <param name="data">缓存数据</param>
            <param name="timeSpan">缓存滑动过期时间</param>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.CacheService.Set(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            设置缓存，滑动过期时间24h
            </summary>
            <param name="key">缓存Key</param>
            <param name="data">缓存数据</param>
            <param name="dependency">缓存依赖项</param>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.CacheService.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan)">
            <summary>
            设置缓存，滑动过期时间24h
            </summary>
            <param name="key">缓存Key</param>
            <param name="data">缓存数据</param>
            <param name="dependency">缓存依赖项</param>
            <param name="timeSpan">缓存滑动过期时间</param>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.CacheService.Remove(System.String)">
            <summary>
            移除缓存
            </summary>
            <param name="key">缓存Key</param>
        </member>
        <member name="P:YK.FrameworkTools.SensitiveFilterService.CacheService.Cache">
            <summary>
            .net缓存对象
            </summary>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.WordTreeHelper.LoadNormalDict">
            <summary>
            初始化正常的数据字典
            </summary>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.WordTreeHelper.LoadExtraDict">
            <summary>
            初始化其他数据字典
            </summary>
        </member>
        <member name="T:YK.FrameworkTools.SensitiveFilterService.LuceneHelper">
            <summary>
            分词辅助类
            </summary>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.LuceneHelper.AnalysisVocabulary(System.String,System.String)">
            <summary>
            根据句子分词
            </summary>
            <param name="strVocabulary">句子</param>
            <param name="fieldName">字段名称，可为空</param>
            <returns></returns>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.LuceneHelper.AnalysisVocabulary(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            多个句子分词
            </summary>
            <param name="dictVocabularys">句子集合</param>
            <returns>分词结果</returns>
        </member>
        <member name="T:YK.FrameworkTools.SensitiveFilterService.YKChineseAnalyzer">
            <summary>
            An <see cref="T:Lucene.Net.Analysis.Analyzer"/> that tokenizes text with <see cref="!:ChineseTokenizer"/> and
            filters with <see cref="!:ChineseFilter"/>
            </summary>
        </member>
        <member name="F:YK.FrameworkTools.SensitiveFilterService.YKChineseAnalyzer.CHINESE_ENGLISH_STOP_WORDS">
            <summary>
            忽略词语
            </summary>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.YKChineseAnalyzer.#ctor">
            <summary>
            索引分析器
            </summary>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.YKChineseAnalyzer.TokenStream(System.String,System.IO.TextReader)">
            <summary>
            Creates a TokenStream which tokenizes all the text in the provided Reader.
            </summary>
            <returns>A TokenStream build from a ChineseTokenizer filtered with ChineseFilter.</returns>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.YKChineseAnalyzer.ReusableTokenStream(System.String,System.IO.TextReader)">
            <summary>
            Returns a (possibly reused) <see cref="M:YK.FrameworkTools.SensitiveFilterService.YKChineseAnalyzer.TokenStream(System.String,System.IO.TextReader)"/> which tokenizes all the text in the
            provided <see cref="T:System.IO.TextReader"/>.
            </summary>
            <returns>
              A <see cref="M:YK.FrameworkTools.SensitiveFilterService.YKChineseAnalyzer.TokenStream(System.String,System.IO.TextReader)"/> built from a <see cref="!:ChineseTokenizer"/> 
              filtered with <see cref="!:ChineseFilter"/>.
            </returns>
        </member>
        <member name="T:YK.FrameworkTools.SensitiveFilterService.YKChineseTokenizer">
            <summary>
            中文分词Tokenier
            </summary>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.YKChineseTokenizer.#ctor(System.IO.TextReader,System.String,System.Boolean)">
            <summary>
            中文分词Tokenier构造函数
            </summary>
            <param name="reader"></param>
            <param name="pathDic"></param>
            <param name="isLoadExtra"></param>
        </member>
        <member name="T:YK.FrameworkTools.SensitiveFilterService.SensitiveWordHelper">
            <summary>
            获取敏感词帮助类
            </summary>
        </member>
        <member name="M:YK.FrameworkTools.SensitiveFilterService.SensitiveWordHelper.GetSensitiveWordResult(System.Collections.Generic.List{YK.FrameworkTools.SensitiveFilterService.SensitiveWordEntity},YK.FrameworkTools.SensitiveFilterService.ESensitiveWordResultType)">
            <summary>
            获取敏感词
            </summary>
            <param name="sensitiveWordInfos">需要分析的句子集合</param>
            <param name="sensitiveWordResultType">分词结果获取类型</param>
            <returns>获取结果</returns>
        </member>
        <member name="T:YK.FrameworkTools.SensitiveFilterService.ESensitiveWordResultType">
            <summary>
            查找敏感词方式
            </summary>
        </member>
        <member name="F:YK.FrameworkTools.SensitiveFilterService.ESensitiveWordResultType.OnlyOne">
            <summary>
            找到一个就停止
            </summary>
        </member>
        <member name="F:YK.FrameworkTools.SensitiveFilterService.ESensitiveWordResultType.PerOne">
            <summary>
            每个句子找第一个敏感词
            </summary>
        </member>
        <member name="F:YK.FrameworkTools.SensitiveFilterService.ESensitiveWordResultType.All">
            <summary>
            取出所有敏感词
            </summary>
        </member>
        <member name="T:YK.FrameworkTools.SensitiveFilterService.SensitiveWordResult">
            <summary>
            分词算法分词结果
            </summary>
        </member>
        <member name="P:YK.FrameworkTools.SensitiveFilterService.SensitiveWordResult.IsSensitiveWord">
            <summary>
            是否是敏感词
            </summary>
        </member>
        <member name="P:YK.FrameworkTools.SensitiveFilterService.SensitiveWordResult.SensitiveWordResultType">
            <summary>
            分词结果枚举
            </summary>
        </member>
        <member name="P:YK.FrameworkTools.SensitiveFilterService.SensitiveWordResult.OnlyOneDictErrorWord">
            <summary>
            找到一个就停止，结果
            </summary>
        </member>
        <member name="P:YK.FrameworkTools.SensitiveFilterService.SensitiveWordResult.PerOneDictErrorWord">
            <summary>
            每个句子找第一个敏感词，结果
            </summary>
        </member>
        <member name="P:YK.FrameworkTools.SensitiveFilterService.SensitiveWordResult.AllDictErrorWord">
            <summary>
            取出所有敏感词，结果
            </summary>
        </member>
        <member name="T:YK.FrameworkTools.SensitiveFilterService.EFieldType">
            <summary>
            分词类型，Text或者Html
            </summary>
        </member>
        <member name="F:YK.FrameworkTools.SensitiveFilterService.EFieldType.Text">
            <summary>
            分词内容是纯文本
            </summary>
        </member>
        <member name="F:YK.FrameworkTools.SensitiveFilterService.EFieldType.HtmlText">
            <summary>
            分词内容是Html
            </summary>
        </member>
        <member name="T:YK.FrameworkTools.SensitiveFilterService.SensitiveWordEntity">
            <summary>
            分词实体
            </summary>
        </member>
        <member name="P:YK.FrameworkTools.SensitiveFilterService.SensitiveWordEntity.Field">
            <summary>
            分词句子字段名称
            </summary>
        </member>
        <member name="P:YK.FrameworkTools.SensitiveFilterService.SensitiveWordEntity.Text">
            <summary>
            分词内容
            </summary>
        </member>
        <member name="P:YK.FrameworkTools.SensitiveFilterService.SensitiveWordEntity.FieldType">
            <summary>
            分词类型
            </summary>
        </member>
    </members>
</doc>
